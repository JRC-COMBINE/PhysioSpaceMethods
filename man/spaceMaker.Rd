% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SpaceMaker.R
\name{spaceMaker}
\alias{spaceMaker}
\title{Creates PhysioSpaces}
\usage{
spaceMaker(GeneExMatrix, DESIGN = NA, CONTRASTs = NA,
  Output = "PhysioScore", LinearOrRNASeq = "Linear")
}
\arguments{
\item{GeneExMatrix}{A matrix of input gene expressions, based on
which the Physiological Space will be made. This matrix supposed
to have genes as rows and samples as columns. Corresponding Entrez Gene
IDs must be assigned to 'rownames', and name of each sample should
be written in 'colnames' of the matrix. Unless 'DESIGN' and
'CONTRASTs' inputs are provided by the user, spaceMaker presumes
the label of the first column (colnames(GeneExMatrix)[1]) to be
the reference of the experiment and uses all the samples with
this label as control.}

\item{DESIGN}{(Optional) Design matrix of GeneExMatrix, made by
the function model.matrix(). If it's not provided, spaceMaker()
will make a design matrix based on colnames(GeneExMatrix).}

\item{CONTRASTs}{(Optional) character vector or list specifying
contrasts. If it's not provided, spaceMaker()
will make the CONTRASTs with the assumption that
colnames(GeneExMatrix)[1] is the label of the control or reference.
REMEMBER that expected user-defined CONTRASTs format changes based
on the LinearOrRNASeq input: in case LinearOrRNASeq='Linear',
CONTRASTs is expected to work as an input for
limma::makeContrasts(). And when LinearOrRNASeq='RNASeq',
CONTRASTs is used as an input for DESeq2::results().}

\item{Output}{A character specifying the output format of
spaceMaker(). The default value is 'PhysioScore', which will
return -log2(p value)*sign(fold change). It is also possible
to obtain fold change by Output='FoldChange', or obtain
the fitted model by having Output ='Model'.}

\item{LinearOrRNASeq}{A character which determines what type of
modelling is ought to be used when making the PhysioSpace.
If it's possible to do linear modelling on the data, e.g. data
is log normal micro-array gene expression data or
limma::voom-transformed RNA-seq data, then LinearOrRNASeq should
be 'Linear'. In this case limma package is used in the
calculations. But in case your GeneExMatrix input is an RNA-seq
count matrix, you should use 'RNASeq' as LinearOrRNASeq. In
this case DESeq2 package is used for calculations.}
}
\value{
Depending on the 'Output' argument, the returned value is
either a matrix, or a model. If Output = "PhysioScore",
a matrix is returned, with genes in rows and Physiological axes
on the columns. In this case, values inside this matrix are
PhysioScores (-log2(p value)*sign(fold change)). In case of
Output = "FoldChange", a matrix of fold changes is returned. And
if Output = "Model", the fitted model by limma::lmFit() or
DESeq2::DESeq() is returned. REMEMBER that when user provides
'DESIGN' input argument, colnames of the returned matrix remains
empty and are needed to be assigned by the user.
}
\description{
This function uses 'Big Data' to make robust
'Physiological Vectors' in N dimensions spaces, with which you
will map new data to extract information from a new data set.
}
\examples{
 INPTMat <-
   matrix(
     data = rnorm(n = 180000, mean = 8, sd = 6),
     nrow = 20000,
     dimnames = list(paste0("g", 1:20000), c(
       rep("Ctrl", 3), rep("Cancer1", 3), rep("Cancer2", 3)
     ))
   ) #Simulated DNA-array gene expression matrix
 LinearSpaceOfINPTMat <- spaceMaker(GeneExMatrix = INPTMat)

 INPTMatRNASeq <-
   matrix(
     data = rnbinom(n = 180000, size = 1.5, prob = 0.01),
     nrow = 20000,
     dimnames = list(paste0("g", 1:20000), c(
       rep("Ctrl", 3), rep("Cancer1", 3), rep("Cancer2", 3)
     ))
   ) #Simulated RNA-seq gene expression matrix
 NotLinearSpaceOfINPTMatRNASeq <-
   spaceMaker(GeneExMatrix = INPTMatRNASeq, LinearOrRNASeq = "RNASeq")

}
